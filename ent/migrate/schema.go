// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CARColumns holds the columns for the "CAR" table.
	CARColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeUUID, Nullable: true},
		{Name: "updated_by", Type: field.TypeUUID, Nullable: true},
		{Name: "deleted_by", Type: field.TypeUUID, Nullable: true},
		{Name: "model", Type: field.TypeString},
		{Name: "car_user", Type: field.TypeUUID, Nullable: true},
	}
	// CARTable holds the schema information for the "CAR" table.
	CARTable = &schema.Table{
		Name:       "CAR",
		Columns:    CARColumns,
		PrimaryKey: []*schema.Column{CARColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "CAR_users_user",
				Columns:    []*schema.Column{CARColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "car_model_car_user",
				Unique:  true,
				Columns: []*schema.Column{CARColumns[7], CARColumns[8]},
			},
		},
	}
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeUUID, Nullable: true},
		{Name: "updated_by", Type: field.TypeUUID, Nullable: true},
		{Name: "deleted_by", Type: field.TypeUUID, Nullable: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "last_name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "password", Type: field.TypeString},
		{Name: "is_active", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CARTable,
		GroupsTable,
		UsersTable,
	}
)

func init() {
	CARTable.ForeignKeys[0].RefTable = UsersTable
	CARTable.Annotation = &entsql.Annotation{
		Table: "CAR",
	}
}
