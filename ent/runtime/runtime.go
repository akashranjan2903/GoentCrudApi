// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"time"

	"github.com/gocrud/ent/car"
	"github.com/gocrud/ent/schema"
	"github.com/gocrud/ent/user"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	carMixin := schema.Car{}.Mixin()
	carHooks := schema.Car{}.Hooks()
	car.Hooks[0] = carHooks[0]
	carMixinFields0 := carMixin[0].Fields()
	_ = carMixinFields0
	carFields := schema.Car{}.Fields()
	_ = carFields
	// carDescCreatedAt is the schema descriptor for created_at field.
	carDescCreatedAt := carMixinFields0[1].Descriptor()
	// car.DefaultCreatedAt holds the default value on creation for the created_at field.
	car.DefaultCreatedAt = carDescCreatedAt.Default.(func() time.Time)
	// carDescUpdatedAt is the schema descriptor for updated_at field.
	carDescUpdatedAt := carMixinFields0[2].Descriptor()
	// car.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	car.DefaultUpdatedAt = carDescUpdatedAt.Default.(func() time.Time)
	// car.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	car.UpdateDefaultUpdatedAt = carDescUpdatedAt.UpdateDefault.(func() time.Time)
	// carDescID is the schema descriptor for id field.
	carDescID := carMixinFields0[0].Descriptor()
	// car.DefaultID holds the default value on creation for the id field.
	car.DefaultID = carDescID.Default.(func() uuid.UUID)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[2].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[0].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = userDescFirstName.Validators[0].(func(string) error)
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[1].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = userDescLastName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescIsActive is the schema descriptor for is_active field.
	userDescIsActive := userFields[4].Descriptor()
	// user.DefaultIsActive holds the default value on creation for the is_active field.
	user.DefaultIsActive = userDescIsActive.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}

const (
	Version = "v0.11.5"                                         // Version of ent codegen.
	Sum     = "h1:V2qhG91C4PMQTa82Q4StoESMQ4dzkMNeStCzszxi0jQ=" // Sum of ent codegen.
)
